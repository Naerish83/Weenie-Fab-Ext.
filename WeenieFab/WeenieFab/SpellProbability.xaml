<Window x:Class="WeenieFab.SpellProbability"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WeenieFab"
        mc:Ignorable="d"
        Title="Spell Book Percentage Chance" Height="450" Width="800" Background="#FFE1E8F5" HorizontalContentAlignment="Left" VerticalContentAlignment="Top" WindowStartupLocation="CenterScreen" ResizeMode="NoResize">


    <Window.Resources>
        <!--Control colors.-->
        <!--Light Ice Blue-->
        <Color x:Key="WindowColor">#FFE8EDF9</Color>
        <!--Light Purplish Blue-->
        <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
        <!--Med Blueish Purple-->
        <Color x:Key="ContentAreaColorDark">#FF858fe5</Color>

        <!--Light Ice Blue-->
        <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
        <!--Light Purplish Blue-->
        <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
        <!--Med Grey-->
        <Color x:Key="DisabledForegroundColor">#FF888888</Color>

        <!--Light Purplish Blue-->
        <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
        <!--Light Silver-->
        <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>


        <!--Button Colors.-->
        <!-- White -->
        <Color x:Key="ControlLightColor">White</Color>
        <!-- Medium Ice Blue -->
        <Color x:Key="ControlMediumColor">#FFACC4EC</Color>
        <!-- Dark Purple -->
        <Color x:Key="ControlDarkColor">#FFd2a728</Color>


        <!--Mouse Over Colors-->
        <!-- Golden Rod-->
        <Color x:Key="ControlMouseOverColorTwo">#FFD3AC28</Color>
        <!--Blood Red-->
        <Color x:Key="ControlMouseOverColor">#FF8b0d00</Color>
        <!--Blood Red -->
        <Color x:Key="ControlPressedColor">#FF8b0d00</Color>


        <!-- Gray -->
        <Color x:Key="GlyphColor">#FF444444</Color>
        <!-- ???? -->
        <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>


        <!--Border colors-->
        <!-- Silver -->
        <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
        <!-- Gray -->
        <Color x:Key="BorderMediumColor">#FF888888</Color>
        <!-- Dark Gray -->
        <Color x:Key="BorderDarkColor">#FF444444</Color>

        <!-- Gray -->
        <Color x:Key="PressedBorderLightColor">#FF888888</Color>
        <!-- Dark Gray -->
        <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

        <!-- Lighte Medium Gray -->
        <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
        <!-- Gray -->
        <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

        <!-- White -->
        <Color x:Key="DefaultBorderBrushLightBrush">White</Color>
        <!-- Black -->
        <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>


        <!--Control-specific resources.-->
        <!-- Lilac -->
        <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
        <!-- Black -->
        <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
        <!-- Lilac -->
        <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

        <!-- Med Light Purple -->
        <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>






        <LinearGradientBrush x:Key="MenuPopupBrush"
                     EndPoint="0.5,1"
                     StartPoint="0.5,0">
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="0" />
            <GradientStop Color="{DynamicResource ControlMediumColor}"
                Offset="0.5" />
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#000000FF"
                    Offset="0" />
                    <GradientStop Color="#600000FF"
                    Offset="0.4" />
                    <GradientStop Color="#600000FF"
                    Offset="0.6" />
                    <GradientStop Color="#000000FF"
                    Offset="1" />
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>

        <!-- FocusVisual -->

        <Style x:Key="ButtonFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="2"
                             StrokeThickness="2"
                             Stroke="#60000000"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Button -->
        <Style TargetType="Button">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="FocusVisualStyle"
          Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="MinHeight"
          Value="23" />
            <Setter Property="MinWidth"
          Value="75" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border TextBlock.Foreground="{TemplateBinding Foreground}"
                x:Name="Border" CornerRadius="2" BorderThickness="1">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
                                            <GradientStop Color="{DynamicResource BorderDarkColor}"  Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>

                            </Border.BorderBrush>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1"
                                 StartPoint="0.5,0">
                                    <GradientStop Color="{DynamicResource ControlLightColor}" Offset="0" />
                                    <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.5" />
                                        <VisualTransition GeneratedDuration="0"
                                  To="Pressed" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlMouseOverColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlPressedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource PressedBorderDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource PressedBorderLightColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledControlDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames
                      Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledForegroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledBorderDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter Margin="2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefault"
                   Value="true">

                                <Setter TargetName="Border"
                    Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0"
                                     EndPoint="0,1">
                                            <GradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="{DynamicResource DefaultBorderBrushLightBrush}" Offset="0.0" />
                                                    <GradientStop Color="{DynamicResource DefaultBorderBrushDarkColor}" Offset="1.0" />
                                                </GradientStopCollection>
                                            </GradientBrush.GradientStops>
                                        </LinearGradientBrush>

                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <Button x:Name="ButtonClose" Content="Cancel" HorizontalAlignment="Right" Margin="0,0,20,10" VerticalAlignment="Bottom" Click="ButtonClose_Click" IsCancel="True" ToolTip="Click to cancel and return to previous window"/>
        <DataGrid x:Name="dgSpellProbability" ItemsSource="{Binding}" Margin="30,50,0,0" AutoGenerateColumns="False" DataGridCell.Selected="dgSpellProbability_Selected"  HorizontalGridLinesBrush="#FF767575" HorizontalAlignment="Left" MinHeight="275" MaxWidth="730" GridLinesVisibility="Horizontal" Background="#FFEDFCFF" MaxHeight="400" VerticalAlignment="Top" ToolTip="Select a spell to edit/change" CanUserSortColumns="False" CanUserReorderColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" CanUserResizeRows="False" Width="500" Height="275">
            <DataGrid.Columns>
                <DataGridTextColumn Header="SpellId" IsReadOnly="True" Binding="{Binding Property}" Width="1.2*"/>
                <DataGridTextColumn Header="Spell Being Cast %" IsReadOnly="True"  Binding="{Binding Value}" Width="2.8*"/>
                <DataGridTextColumn Header="Description" IsReadOnly="True"  Binding="{Binding Description}" Width="6.0*"/>
            </DataGrid.Columns>
        </DataGrid>
        <Label Content="Actual Percentage Chance of Each Spell in the Spell Book" HorizontalAlignment="Left" Margin="30,10,0,0" VerticalAlignment="Top" FontSize="18"/>
        <Label Content="Total Chance of any spell being cast:" HorizontalAlignment="Left" Margin="30,0,0,50" VerticalAlignment="Bottom" VerticalContentAlignment="Top" FontSize="14"/>
        <Label x:Name="LabelTotalSpellPercent" Content="00" HorizontalAlignment="Left" Margin="260,0,0,50" VerticalAlignment="Bottom" FontSize="14"/>
        <Button x:Name="ButtonGenerateProbSpellBookTable" Content="OK" HorizontalAlignment="Right" VerticalAlignment="Bottom" IsDefault="True" Margin="0,0,110,10" Click="ButtonGenerateProbSpellBookTable_Click" ToolTip="Click to generate probability, and update spell book"/>
        <TextBox x:Name="TextBoxSpellBookProb" HorizontalAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Top" Width="210" Height="95" Margin="555,230,0,0" Visibility="Visible"/>
        <Label Content="Spell ID" HorizontalAlignment="Left" Margin="550,50,0,0" VerticalAlignment="Top"/>
        <Label Content="Chance Spell will be cast in %" HorizontalAlignment="Left" Margin="550,95,0,0" VerticalAlignment="Top"/>
        <Label Content="Spell Description" HorizontalAlignment="Left" Margin="550,135,0,0" VerticalAlignment="Top"/>
        <TextBox x:Name="tbSpellId" HorizontalAlignment="Left" Margin="555,75,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" IsEnabled="False"/>
        <TextBox x:Name="tbSpellPercentValue" PreviewTextInput="FloatValidationTextBox" HorizontalAlignment="Left" Margin="555,120,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="50"/>
        <TextBox x:Name="tbSpellDescription" HorizontalAlignment="Left" Margin="555,160,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="190" IsEnabled="False"/>
        <Label Content="%" HorizontalAlignment="Left" Margin="605,115,0,0" VerticalAlignment="Top" FontSize="14" Cursor="UpArrow"/>
        <Button x:Name="ButtonUpdateSpellPercent" Content="Update Spell Percent" HorizontalAlignment="Left" Margin="555,190,0,0" VerticalAlignment="Top" Click="ButtonUpdateSpellPercent_Click"/>
        <TextBlock HorizontalAlignment="Left" Margin="30,0,0,5" VerticalAlignment="Bottom">
            To see how to use this feature, please see the WeenieFab Wiki:
            <Hyperlink NavigateUri="https://github.com/harliq/Weenie-Fab/wiki/Spellbook" RequestNavigate="Hyperlink_RequestNavigate">
                WeenieFab Wiki - Spellbook Tab
            </Hyperlink>
        </TextBlock>
    </Grid>
</Window>
